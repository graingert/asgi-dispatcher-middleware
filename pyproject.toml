[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.metadata]
module = "asgi_dispatcher_middleware"
dist-name = "asgi-dispatcher-middleware"
author = "Thomas Grainger"
author-email = "asgi-dispatcher-middleware@graingert.co.uk"
home-page = "https://github.com/graingert/asgi-dispatcher-middleware"
classifiers = ["License :: OSI Approved :: MIT License"]
description-file = "readme.md"
requires = [
    "anyio~=2.0",
    "typing_extensions ; python_version<'3.8'",
]
requires-python = "~=3.6"

[tool.flit.metadata.requires-extra]
test = [
    "pytest",
    "pytest-cov",
    "coverage>=5.3",
    "anyio[trio,curio]",
    "mypy>=0.800",
]

[tool.isort]
profile = "black"
add_imports=["from __future__ import generator_stop"]

[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
  "--cov",
  "--cov-fail-under=90.0",
  "--cov-report=term-missing:skip-covered",
]
xfail_strict = true
junit_family = "xunit2"
filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source_pkgs = ["asgi_dispatcher_middleware"]
source = ["tests"]

[tool.coverage.paths]
source = [
    ".",
    ".tox/*/lib/*/site-packages/",
    '.tox\\*\\Lib\\site-packages\\',
]


[tool.tox]
legacy_tox_ini = """
; tox configuration file for running tests on local dev env and Travis CI.
;
; The local dev environment will be executed against latest released Twisted.
; The coverage is reported only and local dev and not on Travis-CI as there
; we have separate reported (ex codecov.io)

[tox]
envlist =
    py{36,37,38,39},lint,mypy
minversion=3.21.2
isolated_build=true
requires=
    virtualenv >= 20.4.0
    tox-wheel >= 0.6.0
    tox-gh-actions >= 2.4.0

[testenv]
extras = test
commands = pytest {posargs}
wheel = True
wheel_build_env = build

[testenv:build]
# empty environment to build universal wheel once per tox invocation
# https://github.com/ionelmc/tox-wheel#build-configuration

[testenv:coveralls]
passenv = GITHUB_*
deps =
  coveralls
  coverage>=5.3
commands = coveralls

[testenv:lint]
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure {posargs}
skip_install = true


[testenv:release]
deps = pep517
whitelist_externals =
    cp
    rm
commands =
    rm -rf {toxinidir}/dist
    cp -r {distdir} {toxinidir}/dist # copy the wheel built by tox-wheel
    {envpython} -m pep517.build --source --out-dir={toxinidir}/dist {toxinidir}

[testenv:mypy]
commands = mypy --strict .
"""
